@using Microsoft.AspNet.Identity
@model IEnumerable<CarDealer.Models.CarSold>
@using PagedList.Mvc;
@using PagedList;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Index</h2>
@{
    var action = HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString().CheckViewAct(User.Identity.GetUserId());


    if (action != null && !string.IsNullOrEmpty(User.Identity.GetUserId()))
    {
        if (action.Contains("Create"))
        {
            <p>
                @Html.ActionLink("Create New", "Create")
            </p>
        }
    }
}

@using (Html.BeginForm("Index", "CarSolds", FormMethod.Get, new { Ord = Request["Ord"], Col = Request["Col"], page = Request["page"] }))
{
    <div class="form-group">
        <div class="col-md-2">
            @Html.TextBox("txtCarName", null, new { @class = "form-control", @placeholder = "CarName" })
        </div>
        <div class="col-md-2">
            @Html.TextBox("txtCustomer", null, new { @class = "form-control", @placeholder = "Customer" })
        </div>
        
        <div class="col-md-2">
            @Html.TextBox("DtDatesold", null, new { @class = "form-control datepicker", @placeholder = "Datesold" })
        </div>
        <div class="col-md-2">
            @Html.DropDownList("ddlPayStat", null, "PaymentStatus", new { @class = "form-control" })
        </div>
        <div class="col-md-2">
            @Html.DropDownList("ddlPayMeth", null, "Payment Method", new { @class = "form-control" })
        </div>
        
        <input type="submit" value="Search" class="btn btn-default" />
    </div>

}
    <table class="table">
    <tr>
        <th><a href="@Url.Action("Index",new { Col="CarName",Ord=Request["Ord"]==null|| Request["Ord"]=="DESC"? "ASC":"DESC", txtCarName=Request["txtCarName"] ,txtCustomer=Request["txtCustomer"], txtAgreedPrice=Request["txtAgreedPrice"], txtDatesold=Request["txtDatesold"], ddlPayStat=Request["ddlPayStat"], ddlPayMeth =Request["ddlPayMeth"],page=Request["page"] })">
            @Html.DisplayNameFor(model => model.ToCar.Name)</a>
        </th>
        <th>
            <a href="@Url.Action("Index",new { Col="Customer",Ord=Request["Ord"]==null|| Request["Ord"]=="DESC"? "ASC":"DESC", txtCarName=Request["txtCarName"] ,txtCustomer=Request["txtCustomer"], txtAgreedPrice=Request["txtAgreedPrice"], txtDatesold=Request["txtDatesold"], ddlPayStat=Request["ddlPayStat"], ddlPayMeth =Request["ddlPayMeth"],page=Request["page"] })">
                Customer
            </a>
</th>
        <th>
            <a href="@Url.Action("Index",new { Col="AgreedPrice",Ord=Request["Ord"]==null|| Request["Ord"]=="DESC"? "ASC":"DESC", txtCarName=Request["txtCarName"] ,txtCustomer=Request["txtCustomer"], txtAgreedPrice=Request["txtAgreedPrice"], txtDatesold=Request["txtDatesold"], ddlPayStat=Request["ddlPayStat"], ddlPayMeth =Request["ddlPayMeth"],page=Request["page"] })">
                @Html.DisplayNameFor(model => model.AgreedPrice)
            </a>
</th>
        <th>
            <a href="@Url.Action("Index",new { Col="Datesold",Ord=Request["Ord"]==null|| Request["Ord"]=="DESC"? "ASC":"DESC", txtCarName=Request["txtCarName"] ,txtCustomer=Request["txtCustomer"], txtAgreedPrice=Request["txtAgreedPrice"], txtDatesold=Request["txtDatesold"], ddlPayStat=Request["ddlPayStat"], ddlPayMeth =Request["ddlPayMeth"],page=Request["page"] })">
                @Html.DisplayNameFor(model => model.Datesold)
            </a>
</th>
        <th>
            
                @Html.DisplayNameFor(model => model.PaymentStatus)
</th>
        <th>
            
                @Html.DisplayNameFor(model => model.PaymentMethod)
</th>                       
       
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ToCar.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AgreedPrice)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Datesold)
        </td>
        <td>
           @{ string p = item.PaymentStatus.TransP();}
            @(p)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PaymentMethod)
        </td>
       
        
        
        
        <td>
            @{
                // var action = HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString().CheckViewAct(User.Identity.GetUserId());


                if (action != null && !string.IsNullOrEmpty(User.Identity.GetUserId()))
                {
                    if (action.Contains("Edit"))
                    {

                        <span>@Html.ActionLink("Edit", "Edit", new { id = item.CarSoldId })</span>
                    }
                    if (action.Contains("Details"))
                    { <span>
                          @Html.ActionLink("Details", "Details", new { id = item.CarSoldId })</span> }

                    if (action.Contains("Delete"))
                    {<span>
                         @Html.ActionLink("Delete", "Delete", new { id = item.CarSoldId })</span>}
                }





            }
        </td>
    </tr>
}

</table>
@section scripts{
    
    <script type="text/javascript">
    $(function () { // will trigger when the document is ready
       $('.datepicker').datepicker(); //Initialise any date pickers
    });
</script>
    }
@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page, Col = Request["Col"], Ord = Request["Ord"],  txtCarName=Request["txtCarName"] ,txtCustomer=Request["txtCustomer"], txtAgreedPrice=Request["txtAgreedPrice"], txtDatesold=Request["txtDatesold"], ddlPayStat=Request["ddlPayStat"], ddlPayMeth =Request["ddlPayMeth"]}))